@page "/Data/Product"

@using WebAppProject.Data
@using WebAppProject.Data.Models
@using WebAppProject.ViewModels.Product

@inject IProductDataService db

<h1>Product Page</h1>

<h4>Current Products</h4>

@if (products is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DxGrid Data="products"
            EditMode="GridEditMode.EditRow"
            EditModelSaving="OnEditModelSaving"
            DataItemDeleting="OnDataItemDeleting"
            ShowGroupPanel="true"
            ShowFilterRow="true">
        <Columns>
            <DxGridCommandColumn Width="200px" />
            <DxGridDataColumn FieldName="Name" />
            <DxGridDataColumn FieldName="Price"
                              Caption="Price"/>
            <DxGridDataColumn FieldName="DateAdded"
                              DisplayFormat="D" />

        </Columns>
        <TotalSummary>
            <DxGridSummaryItem FooterColumnName="Name"
                               SummaryType="GridSummaryItemType.Count" />
        </TotalSummary>
    </DxGrid>

}

@code {
    private List<ProductModel> products;
    private ProductDisplayModel newProduct = new ProductDisplayModel();

    protected override async Task OnInitializedAsync()
    {
        products = await this.db.GetProducts();
    }
   
    private async void OnDataItemDeleting(GridDataItemDeletingEventArgs e)
    {
        products.Remove(e.DataItem as ProductModel);
        await this.db.DeleteProduct(e.DataItem as ProductModel);
    }

    private async void OnEditModelSaving(GridEditModelSavingEventArgs e)
    {
        ProductModel editModel = (ProductModel)e.EditModel;
        ProductModel newProduct = e.IsNew ? new ProductModel() : (ProductModel)e.DataItem;

        newProduct.Name = editModel.Name;
        newProduct.Price = editModel.Price;
        newProduct.DateAdded = editModel.DateAdded;

        if (e.IsNew)
        {
            newProduct.Id = Guid.NewGuid();
            products.Add(newProduct as ProductModel);
            await this.db.InsertProduct(newProduct);
        }
        else
        {
            //products.Add(newProduct as ProductModel);
            await this.db.UpdateProduct(newProduct);
        }
    }
}
